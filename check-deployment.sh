#!/bin/bash
# –°–∫—Ä–∏–ø—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –∫ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—é

echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –õ–ê–ë–û–°–§–ï–†–ê –∫ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—é..."

# –¶–≤–µ—Ç–∞
GREEN='\033[0;32m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
NC='\033[0m'

ERRORS=0
WARNINGS=0

check_file() {
    if [ -f "$1" ]; then
        echo -e "${GREEN}‚úÖ $1${NC}"
    else
        echo -e "${RED}‚ùå $1 –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç${NC}"
        ((ERRORS++))
    fi
}

check_dir() {
    if [ -d "$1" ]; then
        echo -e "${GREEN}‚úÖ $1/${NC}"
    else
        echo -e "${RED}‚ùå $1/ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç${NC}"
        ((ERRORS++))
    fi
}

echo ""
echo "üìÇ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞:"
check_file "docker-compose.prod.yml"
check_file ".env.prod.example"
check_file "deploy.sh"
check_file "update.sh"
check_file "DEPLOYMENT_GUIDE.md"

echo ""
echo "üê≥ –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker —Ñ–∞–π–ª–æ–≤:"
check_file "backend/Dockerfile.prod"
check_file "frontend/Dockerfile.prod"
check_file "nginx/prod.conf"

echo ""
echo "‚öôÔ∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ backend:"
check_file "backend/labosfera_project/settings_prod.py"
check_file "backend/requirements.txt"
check_file "backend/manage.py"

echo ""
echo "üé® –ü—Ä–æ–≤–µ—Ä–∫–∞ frontend:"
check_file "frontend/package.json"
check_file "frontend/next.config.mjs"
check_dir "frontend/src"

echo ""
echo "üì¶ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π frontend:"
if [ -f "frontend/package.json" ]; then
    cd frontend
    if npm list next >/dev/null 2>&1; then
        echo -e "${GREEN}‚úÖ Next.js —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω${NC}"
    else
        echo -e "${YELLOW}‚ö†Ô∏è Next.js –Ω–µ –Ω–∞–π–¥–µ–Ω, –±—É–¥–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø—Ä–∏ —Å–±–æ—Ä–∫–µ${NC}"
        ((WARNINGS++))
    fi
    cd ..
fi

echo ""
echo "üîß –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å–ø–æ–ª–Ω—è–µ–º—ã—Ö —Ñ–∞–π–ª–æ–≤:"
if [ -x "deploy.sh" ]; then
    echo -e "${GREEN}‚úÖ deploy.sh –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–π${NC}"
else
    echo -e "${RED}‚ùå deploy.sh –Ω–µ –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–π${NC}"
    ((ERRORS++))
fi

if [ -x "update.sh" ]; then
    echo -e "${GREEN}‚úÖ update.sh –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–π${NC}"
else
    echo -e "${RED}‚ùå update.sh –Ω–µ –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–π${NC}"
    ((ERRORS++))
fi

echo ""
echo "üìù –ü—Ä–æ–≤–µ—Ä–∫–∞ .env.prod:"
if [ -f ".env.prod" ]; then
    echo -e "${GREEN}‚úÖ .env.prod —Å—É—â–µ—Å—Ç–≤—É–µ—Ç${NC}"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
    source .env.prod
    
    if [ -z "$DOMAIN" ]; then
        echo -e "${RED}‚ùå DOMAIN –Ω–µ –∑–∞–¥–∞–Ω${NC}"
        ((ERRORS++))
    else
        echo -e "${GREEN}‚úÖ DOMAIN: $DOMAIN${NC}"
    fi
    
    if [ -z "$EMAIL" ]; then
        echo -e "${RED}‚ùå EMAIL –Ω–µ –∑–∞–¥–∞–Ω${NC}"
        ((ERRORS++))
    else
        echo -e "${GREEN}‚úÖ EMAIL: $EMAIL${NC}"
    fi
    
    if [ "$POSTGRES_PASSWORD" = "your_secure_password_here" ]; then
        echo -e "${YELLOW}‚ö†Ô∏è POSTGRES_PASSWORD –Ω–µ –∏–∑–º–µ–Ω–µ–Ω${NC}"
        ((WARNINGS++))
    else
        echo -e "${GREEN}‚úÖ POSTGRES_PASSWORD –Ω–∞—Å—Ç—Ä–æ–µ–Ω${NC}"
    fi
    
    if [ "$DJANGO_SECRET_KEY" = "your-secret-key-here" ]; then
        echo -e "${YELLOW}‚ö†Ô∏è DJANGO_SECRET_KEY –Ω–µ –∏–∑–º–µ–Ω–µ–Ω${NC}"
        ((WARNINGS++))
    else
        echo -e "${GREEN}‚úÖ DJANGO_SECRET_KEY –Ω–∞—Å—Ç—Ä–æ–µ–Ω${NC}"
    fi
    
else
    echo -e "${YELLOW}‚ö†Ô∏è .env.prod –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç (–±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω –∏–∑ —à–∞–±–ª–æ–Ω–∞)${NC}"
    ((WARNINGS++))
fi

echo ""
echo "üëë –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∞–¥–º–∏–Ω–∫–∏:"
if [ -f "backend/catalog/admin.py" ]; then
    echo -e "${GREEN}‚úÖ –ê–¥–º–∏–Ω–∫–∞ –∫–∞—Ç–∞–ª–æ–≥–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞${NC}"
else
    echo -e "${RED}‚ùå backend/catalog/admin.py –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç${NC}"
    ((ERRORS++))
fi

if [ -f "backend/orders/admin.py" ]; then
    echo -e "${GREEN}‚úÖ –ê–¥–º–∏–Ω–∫–∞ –∑–∞–∫–∞–∑–æ–≤ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞${NC}"
else
    echo -e "${RED}‚ùå backend/orders/admin.py –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç${NC}"
    ((ERRORS++))
fi

echo -e "${GREEN}‚úÖ –î–æ—Å—Ç—É–ø –∫ –∞–¥–º–∏–Ω–∫–µ: https://\${DOMAIN}/admin/${NC}"
echo -e "${GREEN}‚úÖ –õ–æ–≥–∏–Ω –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: admin/admin123${NC}"

echo ""
echo "üåê –ü—Ä–æ–≤–µ—Ä–∫–∞ Git:"
if git status >/dev/null 2>&1; then
    echo -e "${GREEN}‚úÖ Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω${NC}"
    
    if git remote get-url origin >/dev/null 2>&1; then
        REMOTE_URL=$(git remote get-url origin)
        echo -e "${GREEN}‚úÖ Remote origin: $REMOTE_URL${NC}"
    else
        echo -e "${YELLOW}‚ö†Ô∏è Git remote origin –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω${NC}"
        ((WARNINGS++))
    fi
else
    echo -e "${RED}‚ùå Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω${NC}"
    ((ERRORS++))
fi

echo ""
echo "üìä –†–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏:"
echo "‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê"

if [ $ERRORS -eq 0 ]; then
    echo -e "${GREEN}üéâ –ì–æ—Ç–æ–≤ –∫ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—é!${NC}"
    echo ""
    echo "üìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:"
    echo "1. –ö—É–ø–∏—Ç–µ VPS –Ω–∞ REG.RU (VPS-Business, 1990‚ÇΩ/–º–µ—Å)"
    echo "2. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ DNS –∑–∞–ø–∏—Å–∏ –¥–ª—è –¥–æ–º–µ–Ω–∞ labosfera.ru"
    echo "3. –ü–æ–¥–∫–ª—é—á–∏—Ç–µ—Å—å –∫ —Å–µ—Ä–≤–µ—Ä—É: ssh root@YOUR_SERVER_IP"
    echo "4. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: curl -fsSL https://raw.githubusercontent.com/Semen1987nsk/Labosfera/main/deploy.sh | bash"
    echo ""
    echo "ÔøΩ –ü–æ—Å–ª–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è:"
    echo "- –ê–¥–º–∏–Ω–∫–∞: https://labosfera.ru/admin/"
    echo "- –õ–æ–≥–∏–Ω: admin / –ü–∞—Ä–æ–ª—å: admin123"
    echo "- ‚ö†Ô∏è  –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û —Å–º–µ–Ω–∏—Ç–µ –ø–∞—Ä–æ–ª—å –ø–æ—Å–ª–µ –≤—Ö–æ–¥–∞!"
    echo ""
    echo "ÔøΩüìñ –ü–æ–¥—Ä–æ–±–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏:"
    echo "- –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ: DEPLOYMENT_GUIDE.md"
    echo "- –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ: ADMIN_GUIDE.md"
    echo "- –ë—ã—Å—Ç—Ä—ã–µ –∫–æ–º–∞–Ω–¥—ã: ADMIN_QUICK_REFERENCE.md"
else
    echo -e "${RED}‚ùå –ù–∞–π–¥–µ–Ω–æ $ERRORS –æ—à–∏–±–æ–∫${NC}"
    echo "–ò—Å–ø—Ä–∞–≤—å—Ç–µ –æ—à–∏–±–∫–∏ –ø–µ—Ä–µ–¥ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ–º"
fi

if [ $WARNINGS -gt 0 ]; then
    echo -e "${YELLOW}‚ö†Ô∏è –ù–∞–π–¥–µ–Ω–æ $WARNINGS –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π${NC}"
    echo "–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è"
fi

exit $ERRORS