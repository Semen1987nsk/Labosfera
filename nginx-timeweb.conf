# ==========================================
# ЛАБОСФЕРА - NGINX конфигурация для Timeweb Cloud
# Оптимизировано для Ubuntu 24.04 LTS и гигабитного канала
# ==========================================

# Оптимизация для Timeweb Cloud
worker_processes auto;
worker_rlimit_nofile 65535;

events {
    worker_connections 4096;
    use epoll;
    multi_accept on;
}

http {
    # Основные настройки
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Оптимизация для NVMe дисков Timeweb Cloud
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    
    # Оптимизация буферов для гигабитного канала
    client_body_buffer_size 128k;
    client_max_body_size 50m;
    client_header_buffer_size 3m;
    large_client_header_buffers 4 256k;
    
    # Сжатие для экономии трафика
    gzip on;
    gzip_vary on;
    gzip_min_length 10240;
    gzip_proxied expired no-cache no-store private must-revalidate auth;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/xml+rss
        application/json
        image/svg+xml;
    
    # Кэширование для статических файлов (оптимизировано для NVMe)
    open_file_cache max=200000 inactive=20s;
    open_file_cache_valid 30s;
    open_file_cache_min_uses 2;
    open_file_cache_errors on;
    
    # Логирование
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                   '$status $body_bytes_sent "$http_referer" '
                   '"$http_user_agent" "$http_x_forwarded_for" '
                   'rt=$request_time uct="$upstream_connect_time" '
                   'uht="$upstream_header_time" urt="$upstream_response_time"';
    
    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;
    
    # Безопасность
    server_tokens off;
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header Referrer-Policy "strict-origin-when-cross-origin";
    add_header Content-Security-Policy "default-src 'self' https:; script-src 'self' 'unsafe-inline' 'unsafe-eval' https:; style-src 'self' 'unsafe-inline' https:; img-src 'self' data: https:; font-src 'self' https:; connect-src 'self' https:; media-src 'self' https:; object-src 'none'; frame-src 'none';";
    
    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=general:10m rate=1r/s;
    
    # Upstream для Django
    upstream django_backend {
        least_conn;
        server backend:8000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }
    
    # Upstream для Next.js
    upstream nextjs_frontend {
        least_conn;
        server frontend:3000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }
    
    # Перенаправление HTTP -> HTTPS
    server {
        listen 80;
        server_name _;
        
        # Разрешить Let's Encrypt проверки
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
            allow all;
        }
        
        # Все остальное перенаправляем на HTTPS
        location / {
            return 301 https://$host$request_uri;
        }
    }
    
    # Основной HTTPS сервер
    server {
        listen 443 ssl http2;
        server_name labosfera.ru www.labosfera.ru;
        
        # SSL сертификаты Let's Encrypt
        ssl_certificate /etc/letsencrypt/live/labosfera.ru/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/labosfera.ru/privkey.pem;
        
        # Современная SSL конфигурация
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;
        
        # HSTS заголовок
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
        
        # Перенаправление www -> без www
        if ($host = www.labosfera.ru) {
            return 301 https://labosfera.ru$request_uri;
        }
        
        # Корневая директория
        root /var/www/html;
        index index.html;
        
        # API запросы к Django
        location /api/ {
            limit_req zone=api burst=20 nodelay;
            
            proxy_pass http://django_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Оптимизация для Timeweb Cloud
            proxy_connect_timeout 5s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            proxy_buffers 16 4k;
            proxy_buffer_size 2k;
            
            # WebSocket поддержка
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }
        
        # Админка Django
        location /admin/ {
            limit_req zone=general burst=5 nodelay;
            
            proxy_pass http://django_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_connect_timeout 5s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }
        
        # Статические файлы Django
        location /static/ {
            alias /app/staticfiles/;
            
            # Кэширование статических файлов (оптимизировано для NVMe)
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header X-Content-Type-Options nosniff;
            
            # Сжатие
            gzip_static on;
            
            # CORS для статических файлов
            add_header Access-Control-Allow-Origin *;
        }
        
        # Медиа файлы Django
        location /media/ {
            alias /app/media/;
            
            # Кэширование медиа файлов
            expires 30d;
            add_header Cache-Control "public";
            add_header X-Content-Type-Options nosniff;
            
            # Безопасность для загруженных файлов
            location ~* \.(php|php5|phtml|pl|py|jsp|asp|sh|cgi)$ {
                deny all;
            }
        }
        
        # Health check
        location /health/ {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        # Nginx статус (только локально)
        location /nginx-status {
            stub_status on;
            allow 127.0.0.1;
            allow ::1;
            deny all;
            access_log off;
        }
        
        # Next.js статические файлы
        location /_next/static/ {
            proxy_pass http://nextjs_frontend;
            
            # Агрессивное кэширование для _next/static
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
        
        # Next.js API routes
        location /api/frontend/ {
            proxy_pass http://nextjs_frontend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Все остальное к Next.js
        location / {
            proxy_pass http://nextjs_frontend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Оптимизация для SPA
            proxy_connect_timeout 5s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # WebSocket поддержка для Next.js dev
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }
        
        # Robots.txt
        location = /robots.txt {
            alias /var/www/html/robots.txt;
            access_log off;
        }
        
        # Sitemap
        location = /sitemap.xml {
            proxy_pass http://django_backend;
            proxy_set_header Host $host;
            
            # Кэширование sitemap
            proxy_cache_valid 200 1h;
        }
        
        # Favicon
        location = /favicon.ico {
            alias /var/www/html/favicon.ico;
            access_log off;
            expires 30d;
        }
        
        # Защита от нежелательных файлов
        location ~ /\. {
            deny all;
            access_log off;
        }
        
        location ~ \.(git|env|log|htaccess|htpasswd|ini|conf)$ {
            deny all;
            access_log off;
        }
        
        # Защита от спама и ботов
        location ~ /(wp-admin|wp-login|phpmyadmin|admin|xmlrpc) {
            deny all;
            access_log off;
        }
    }
    
    # Дополнительный сервер для мониторинга (только локально)
    server {
        listen 127.0.0.1:8080;
        server_name localhost;
        
        location / {
            stub_status on;
            access_log off;
            allow 127.0.0.1;
            deny all;
        }
    }
}

# ==========================================
# ОПТИМИЗАЦИЯ ДЛЯ TIMEWEB CLOUD
# ==========================================

# Эта конфигурация оптимизирована для:
# ✅ Ubuntu 24.04 LTS
# ✅ NVMe диски (быстрое чтение файлов)
# ✅ Гигабитный канал (сжатие и буферизация)
# ✅ HTTP/2 для ускорения загрузки
# ✅ Современные SSL настройки
# ✅ Агрессивное кэширование статики
# ✅ Rate limiting для защиты от DDoS
# ✅ Security headers
# ✅ Автоматический HTTPS redirect

# Для активации:
# 1. Скопируйте в /etc/nginx/sites-available/labosfera
# 2. Создайте symlink: ln -s /etc/nginx/sites-available/labosfera /etc/nginx/sites-enabled/
# 3. Удалите default: rm /etc/nginx/sites-enabled/default
# 4. Проверьте: nginx -t
# 5. Перезапустите: systemctl reload nginx