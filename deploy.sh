#!/bin/bash
# –°–∫—Ä–∏–ø—Ç —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è –õ–ê–ë–û–°–§–ï–†–ê –Ω–∞ production —Å–µ—Ä–≤–µ—Ä–µ

set -e

echo "üöÄ –ù–∞—á–∏–Ω–∞–µ–º —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –õ–ê–ë–û–°–§–ï–†–ê..."

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ –æ—à–∏–±–æ–∫
error() {
    echo -e "${RED}‚ùå –û—à–∏–±–∫–∞: $1${NC}"
    exit 1
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —É—Å–ø–µ—Ö–∞
success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π
warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–ø—É—Å–∫–∞ –ø–æ–¥ root
if [ "$EUID" -ne 0 ]; then
    error "–°–∫—Ä–∏–ø—Ç –¥–æ–ª–∂–µ–Ω –∑–∞–ø—É—Å–∫–∞—Ç—å—Å—è –ø–æ–¥ root"
fi

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã
echo "üì¶ –û–±–Ω–æ–≤–ª—è–µ–º —Å–∏—Å—Ç–µ–º—É..."
apt update && apt upgrade -y
success "–°–∏—Å—Ç–µ–º–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞"

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker
echo "üê≥ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Docker..."
if ! command -v docker &> /dev/null; then
    curl -fsSL https://get.docker.com -o get-docker.sh
    sh get-docker.sh
    rm get-docker.sh
    success "Docker —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
else
    success "Docker —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
fi

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker Compose
echo "üîß –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Docker Compose..."
if ! command -v docker-compose &> /dev/null; then
    curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
    chmod +x /usr/local/bin/docker-compose
    success "Docker Compose —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
else
    success "Docker Compose —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
fi

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Git
echo "üì• –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Git..."
if ! command -v git &> /dev/null; then
    apt install git -y
    success "Git —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
else
    success "Git —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
fi

# –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
echo "üìÅ –ö–ª–æ–Ω–∏—Ä—É–µ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π..."
if [ ! -d "/opt/labosfera" ]; then
    cd /opt
    git clone https://github.com/Semen1987nsk/Labosfera.git labosfera
    cd labosfera
    success "–†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π —Å–∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω"
else
    cd /opt/labosfera
    git pull origin main
    success "–†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –æ–±–Ω–æ–≤–ª–µ–Ω"
fi

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è
echo "‚öôÔ∏è  –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
if [ ! -f ".env.prod" ]; then
    cp .env.prod.example .env.prod
    success "–°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª .env.prod –∏–∑ —à–∞–±–ª–æ–Ω–∞"
    echo ""
    warning "üî• –ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–û! üî•"
    echo "–°–µ–π—á–∞—Å –æ—Ç–∫—Ä–æ–µ—Ç—Å—è —Ä–µ–¥–∞–∫—Ç–æ—Ä –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ .env.prod"
    echo "–û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –∏–∑–º–µ–Ω–∏—Ç–µ —Å–ª–µ–¥—É—é—â–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:"
    echo ""
    echo "1. POSTGRES_PASSWORD=SuperSecurePassword123!"
    echo "2. DJANGO_SECRET_KEY=–≤–∞—à-—Å—É–ø–µ—Ä-—Å–µ–∫—Ä–µ—Ç–Ω—ã–π-–∫–ª—é—á-50-—Å–∏–º–≤–æ–ª–æ–≤"
    echo "3. DOMAIN=labosfera.ru (–≤–∞—à –¥–æ–º–µ–Ω)"
    echo "4. EMAIL=admin@labosfera.ru (–≤–∞—à email)"
    echo ""
    echo "üí° –î–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ Django Secret Key –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: https://djecrety.ir/"
    echo ""
    echo "üìù –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ nano:"
    echo "   - Ctrl+X = –≤—ã—Ö–æ–¥"
    echo "   - Y = —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å"
    echo "   - Enter = –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å"
    echo ""
    read -p "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞..."
    nano .env.prod
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏–∑–º–µ–Ω–∏–ª –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    if grep -q "your_secure_password_here" .env.prod; then
        error "POSTGRES_PASSWORD –Ω–µ –∏–∑–º–µ–Ω–µ–Ω! –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ."
    fi
    
    if grep -q "your-secret-key-here" .env.prod; then
        error "DJANGO_SECRET_KEY –Ω–µ –∏–∑–º–µ–Ω–µ–Ω! –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ."
    fi
    
    success "–ù–∞—Å—Ç—Ä–æ–π–∫–∏ .env.prod –æ–±–Ω–æ–≤–ª–µ–Ω—ã"
fi

# –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
echo "üìÇ –°–æ–∑–¥–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏..."
mkdir -p certbot/conf certbot/www backend/logs
success "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å–æ–∑–¥–∞–Ω—ã"

# –ó–∞–ø—É—Å–∫ –±–µ–∑ SSL –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞
echo "üîí –ü–æ–ª—É—á–∞–µ–º SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç..."
source .env.prod

# –í—Ä–µ–º–µ–Ω–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è nginx –±–µ–∑ SSL
cat > nginx/temp.conf << EOF
events {
    worker_connections 1024;
}
http {
    server {
        listen 80;
        server_name ${DOMAIN} www.${DOMAIN};
        
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }
        
        location / {
            return 200 'Server is ready for SSL setup';
            add_header Content-Type text/plain;
        }
    }
}
EOF

# –ó–∞–ø—É—Å–∫ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ nginx
docker run -d --name temp-nginx \
    -p 80:80 \
    -v "$(pwd)/nginx/temp.conf:/etc/nginx/nginx.conf:ro" \
    -v "$(pwd)/certbot/www:/var/www/certbot" \
    nginx:alpine

# –ü–æ–ª—É—á–µ–Ω–∏–µ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞
docker run --rm \
    -v "$(pwd)/certbot/conf:/etc/letsencrypt" \
    -v "$(pwd)/certbot/www:/var/www/certbot" \
    certbot/certbot \
    certonly --webroot -w /var/www/certbot \
    --email ${EMAIL} \
    --agree-tos \
    --no-eff-email \
    -d ${DOMAIN} -d www.${DOMAIN}

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ nginx
docker stop temp-nginx
docker rm temp-nginx

success "SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –ø–æ–ª—É—á–µ–Ω"

# –°–±–æ—Ä–∫–∞ –∏ –∑–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
echo "üèóÔ∏è  –°–æ–±–∏—Ä–∞–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ..."
docker-compose -f docker-compose.prod.yml build
docker-compose -f docker-compose.prod.yml up -d

# –ú–∏–≥—Ä–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
echo "üóÑÔ∏è  –ü—Ä–∏–º–µ–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏..."
sleep 10  # –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
docker-compose -f docker-compose.prod.yml exec backend python manage.py migrate --settings=labosfera_project.settings_prod

# –°–±–æ—Ä —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤ –¥–ª—è –∞–¥–º–∏–Ω–∫–∏
echo "üì¶ –°–æ–±–∏—Ä–∞–µ–º —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã..."
docker-compose -f docker-compose.prod.yml exec backend python manage.py collectstatic --noinput --settings=labosfera_project.settings_prod

# –°–æ–∑–¥–∞–Ω–∏–µ —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
echo "üë§ –°–æ–∑–¥–∞–Ω–∏–µ —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è..."
docker-compose -f docker-compose.prod.yml exec backend python manage.py shell --settings=labosfera_project.settings_prod << EOF
from django.contrib.auth import get_user_model
User = get_user_model()
if not User.objects.filter(username='admin').exists():
    User.objects.create_superuser('admin', '${EMAIL}', 'admin123')
    print('‚úÖ –°—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω: admin/admin123')
else:
    print('‚ÑπÔ∏è  –°—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç')
EOF

success "üéâ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"

echo ""
echo "üåê –í–∞—à —Å–∞–π—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: https://${DOMAIN}"
echo "üîß –ê–¥–º–∏–Ω–∫–∞: https://${DOMAIN}/admin/"
echo "üë§ –õ–æ–≥–∏–Ω: admin"
echo "üîë –ü–∞—Ä–æ–ª—å: admin123"
echo ""
warning "–í–ê–ñ–ù–û: –°–º–µ–Ω–∏—Ç–µ –ø–∞—Ä–æ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞!"
warning "–í–ê–ñ–ù–û: –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤ .env.prod"

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤
echo "üîÑ –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ SSL..."
(crontab -l 2>/dev/null; echo "0 12 * * * cd /opt/labosfera && docker-compose -f docker-compose.prod.yml exec certbot certbot renew --quiet && docker-compose -f docker-compose.prod.yml restart nginx") | crontab -
success "–ê–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ SSL –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ"

echo "‚úÖ –í—Å–µ –≥–æ—Ç–æ–≤–æ! –°–∞–π—Ç –õ–ê–ë–û–°–§–ï–†–ê —É—Å–ø–µ—à–Ω–æ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç!"