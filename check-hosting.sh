#!/bin/bash
# –°–∫—Ä–∏–ø—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Ö–æ—Å—Ç–∏–Ω–≥–∞ —Å –õ–ê–ë–û–°–§–ï–†–ê

echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Ö–æ—Å—Ç–∏–Ω–≥–∞ —Å –õ–ê–ë–û–°–§–ï–†–ê..."

# –¶–≤–µ—Ç–∞
GREEN='\033[0;32m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

SCORE=0
MAX_SCORE=10

check_requirement() {
    local name=$1
    local command=$2
    local min_version=$3
    local current_version=$4
    local points=$5
    
    echo -n "üìã $name: "
    
    if command -v $command &> /dev/null; then
        if [[ "$current_version" != "" ]]; then
            echo -e "${GREEN}‚úÖ $current_version${NC}"
            if [[ "$current_version" >= "$min_version" ]]; then
                echo "   ${GREEN}‚úì –°–æ–≤–º–µ—Å—Ç–∏–º–æ (—Ç—Ä–µ–±—É–µ—Ç—Å—è $min_version+)${NC}"
                ((SCORE += points))
            else
                echo "   ${YELLOW}‚ö†Ô∏è –£—Å—Ç–∞—Ä–µ–ª–æ (—Ç—Ä–µ–±—É–µ—Ç—Å—è $min_version+)${NC}"
                ((SCORE += points/2))
            fi
        else
            echo -e "${GREEN}‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ${NC}"
            ((SCORE += points))
        fi
    else
        echo -e "${RED}‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–æ${NC}"
        echo "   ${RED}‚úó –¢—Ä–µ–±—É–µ—Ç—Å—è –¥–ª—è —Ä–∞–±–æ—Ç—ã${NC}"
    fi
}

echo ""
echo "üñ•Ô∏è  –û–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞:"
echo "   $(uname -a)"

echo ""
echo "üì¶ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π:"

# Node.js
if command -v node &> /dev/null; then
    NODE_VERSION=$(node --version 2>/dev/null | sed 's/v//')
    check_requirement "Node.js" "node" "18.0.0" "$NODE_VERSION" 3
else
    check_requirement "Node.js" "node" "18.0.0" "" 3
fi

# Python
if command -v python3 &> /dev/null; then
    PYTHON_VERSION=$(python3 --version 2>/dev/null | cut -d' ' -f2)
    check_requirement "Python 3" "python3" "3.9.0" "$PYTHON_VERSION" 2
else
    check_requirement "Python 3" "python3" "3.9.0" "" 2
fi

# Git
if command -v git &> /dev/null; then
    GIT_VERSION=$(git --version 2>/dev/null | cut -d' ' -f3)
    check_requirement "Git" "git" "2.0.0" "$GIT_VERSION" 1
else
    check_requirement "Git" "git" "2.0.0" "" 1
fi

# curl
if command -v curl &> /dev/null; then
    CURL_VERSION=$(curl --version 2>/dev/null | head -n1 | cut -d' ' -f2)
    check_requirement "curl" "curl" "7.0.0" "$CURL_VERSION" 1
else
    check_requirement "curl" "curl" "7.0.0" "" 1
fi

# pip
if command -v pip3 &> /dev/null || command -v pip &> /dev/null; then
    if command -v pip3 &> /dev/null; then
        PIP_VERSION=$(pip3 --version 2>/dev/null | cut -d' ' -f2)
    else
        PIP_VERSION=$(pip --version 2>/dev/null | cut -d' ' -f2)
    fi
    check_requirement "pip" "pip" "20.0.0" "$PIP_VERSION" 1
else
    check_requirement "pip" "pip" "20.0.0" "" 1
fi

# npm
if command -v npm &> /dev/null; then
    NPM_VERSION=$(npm --version 2>/dev/null)
    check_requirement "npm" "npm" "8.0.0" "$NPM_VERSION" 2
else
    check_requirement "npm" "npm" "8.0.0" "" 2
fi

echo ""
echo "üíæ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ—Å—É—Ä—Å–æ–≤:"

# RAM
TOTAL_RAM=$(free -m 2>/dev/null | grep '^Mem:' | awk '{print $2}')
if [[ $TOTAL_RAM -gt 0 ]]; then
    echo -n "üìä RAM: "
    if [[ $TOTAL_RAM -gt 2048 ]]; then
        echo -e "${GREEN}‚úÖ ${TOTAL_RAM}MB${NC}"
        echo "   ${GREEN}‚úì –î–æ—Å—Ç–∞—Ç–æ—á–Ω–æ (—Ç—Ä–µ–±—É–µ—Ç—Å—è 2048MB+)${NC}"
    elif [[ $TOTAL_RAM -gt 1024 ]]; then
        echo -e "${YELLOW}‚ö†Ô∏è ${TOTAL_RAM}MB${NC}"
        echo "   ${YELLOW}‚ö†Ô∏è –û–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è 2048MB+)${NC}"
    else
        echo -e "${RED}‚ùå ${TOTAL_RAM}MB${NC}"
        echo "   ${RED}‚úó –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ (—Ç—Ä–µ–±—É–µ—Ç—Å—è 2048MB+)${NC}"
    fi
fi

# Disk space
DISK_AVAILABLE=$(df -m . 2>/dev/null | tail -1 | awk '{print $4}')
if [[ $DISK_AVAILABLE -gt 0 ]]; then
    echo -n "üíΩ –°–≤–æ–±–æ–¥–Ω–æ–µ –º–µ—Å—Ç–æ: "
    if [[ $DISK_AVAILABLE -gt 10240 ]]; then
        echo -e "${GREEN}‚úÖ ${DISK_AVAILABLE}MB${NC}"
        echo "   ${GREEN}‚úì –î–æ—Å—Ç–∞—Ç–æ—á–Ω–æ (—Ç—Ä–µ–±—É–µ—Ç—Å—è 10GB+)${NC}"
    elif [[ $DISK_AVAILABLE -gt 5120 ]]; then
        echo -e "${YELLOW}‚ö†Ô∏è ${DISK_AVAILABLE}MB${NC}"
        echo "   ${YELLOW}‚ö†Ô∏è –û–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è 10GB+)${NC}"
    else
        echo -e "${RED}‚ùå ${DISK_AVAILABLE}MB${NC}"
        echo "   ${RED}‚úó –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ (—Ç—Ä–µ–±—É–µ—Ç—Å—è 10GB+)${NC}"
    fi
fi

echo ""
echo "üåê –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ç–µ–≤—ã—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π:"

# SSL
if command -v openssl &> /dev/null; then
    echo -e "üîí OpenSSL: ${GREEN}‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω${NC}"
else
    echo -e "üîí OpenSSL: ${RED}‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω${NC}"
fi

# Port 80/443
if command -v netstat &> /dev/null; then
    if netstat -tuln 2>/dev/null | grep -q ":80 "; then
        echo -e "üåê –ü–æ—Ä—Ç 80: ${YELLOW}‚ö†Ô∏è –ó–∞–Ω—è—Ç${NC}"
    else
        echo -e "üåê –ü–æ—Ä—Ç 80: ${GREEN}‚úÖ –î–æ—Å—Ç—É–ø–µ–Ω${NC}"
    fi
    
    if netstat -tuln 2>/dev/null | grep -q ":443 "; then
        echo -e "üîí –ü–æ—Ä—Ç 443: ${YELLOW}‚ö†Ô∏è –ó–∞–Ω—è—Ç${NC}"
    else
        echo -e "üîí –ü–æ—Ä—Ç 443: ${GREEN}‚úÖ –î–æ—Å—Ç—É–ø–µ–Ω${NC}"
    fi
fi

echo ""
echo "üìä –ò—Ç–æ–≥–æ–≤–∞—è –æ—Ü–µ–Ω–∫–∞:"
echo "‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê"

PERCENTAGE=$((SCORE * 100 / MAX_SCORE))

if [[ $PERCENTAGE -ge 90 ]]; then
    echo -e "${GREEN}üéâ –û–¢–õ–ò–ß–ù–û! –°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å: $PERCENTAGE% ($SCORE/$MAX_SCORE)${NC}"
    echo -e "${GREEN}‚úÖ –•–æ—Å—Ç–∏–Ω–≥ –∏–¥–µ–∞–ª—å–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –õ–ê–ë–û–°–§–ï–†–ê${NC}"
    echo -e "${GREEN}üöÄ –ú–æ–∂–Ω–æ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞—Ç—å —Å –ø–æ–ª–Ω—ã–º –¥–∏–∑–∞–π–Ω–æ–º!${NC}"
elif [[ $PERCENTAGE -ge 70 ]]; then
    echo -e "${YELLOW}‚ö†Ô∏è –•–û–†–û–®–û! –°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å: $PERCENTAGE% ($SCORE/$MAX_SCORE)${NC}"
    echo -e "${YELLOW}‚úÖ –•–æ—Å—Ç–∏–Ω–≥ –ø–æ–¥—Ö–æ–¥–∏—Ç —Å –Ω–µ–±–æ–ª—å—à–∏–º–∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è–º–∏${NC}"
    echo -e "${YELLOW}üîß –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –æ–±–Ω–æ–≤–∏—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã${NC}"
elif [[ $PERCENTAGE -ge 50 ]]; then
    echo -e "${YELLOW}üîÑ –°–†–ï–î–ù–ï! –°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å: $PERCENTAGE% ($SCORE/$MAX_SCORE)${NC}"
    echo -e "${YELLOW}‚ö†Ô∏è –•–æ—Å—Ç–∏–Ω–≥ —Ç—Ä–µ–±—É–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –¥–ª—è –ø–æ–ª–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏${NC}"
    echo -e "${YELLOW}üõ†Ô∏è –í–æ–∑–º–æ–∂–Ω–æ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –≤ —É–ø—Ä–æ—â–µ–Ω–Ω–æ–º —Ä–µ–∂–∏–º–µ${NC}"
else
    echo -e "${RED}‚ùå –ü–õ–û–•–û! –°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å: $PERCENTAGE% ($SCORE/$MAX_SCORE)${NC}"
    echo -e "${RED}‚úó –•–æ—Å—Ç–∏–Ω–≥ –Ω–µ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–π –≤–µ—Ä—Å–∏–∏ –õ–ê–ë–û–°–§–ï–†–ê${NC}"
    echo -e "${RED}üìã –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —Å–º–µ–Ω–∏—Ç—å —Ö–æ—Å—Ç–∏–Ω–≥ –∏–ª–∏ –æ–±–Ω–æ–≤–∏—Ç—å –ü–û${NC}"
fi

echo ""
echo "üìã –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:"

if [[ $PERCENTAGE -ge 90 ]]; then
    echo "üöÄ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è:"
    echo "   curl -fsSL https://raw.githubusercontent.com/Semen1987nsk/Labosfera/main/deploy.sh | bash"
elif [[ $PERCENTAGE -ge 50 ]]; then
    echo "üîß –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –æ–±–Ω–æ–≤–∏—Ç—å –ü–û –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ö–æ—Å—Ç–∏–Ω–≥-–≤–µ—Ä—Å–∏—é:"
    echo "   curl -fsSL https://raw.githubusercontent.com/Semen1987nsk/Labosfera/main/deploy-hosting.sh | bash"
else
    echo "üìñ –û–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å —Å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º–∏ –ø–æ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–º—É —Ö–æ—Å—Ç–∏–Ω–≥—É:"
    echo "   https://github.com/Semen1987nsk/Labosfera/blob/main/MODERN_HOSTING_GUIDE.md"
fi

echo ""
echo "üÜò –ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å —Å –≤—ã–±–æ—Ä–æ–º —Ö–æ—Å—Ç–∏–Ω–≥–∞? –°–º–æ—Ç—Ä–∏—Ç–µ MODERN_HOSTING_GUIDE.md"