services:
  backend:
    build: .
    container_name: labosfera_backend
    command: gunicorn labosfera_project.wsgi:application --bind 0.0.0.0:8000
    env_file:
      - .env
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    depends_on:
      db:
        condition: service_healthy
    environment:
      - PYTHONPATH=/app
      # --- ДОБАВЛЕНЫ ПЕРЕМЕННЫЕ ОКРУЖЕНИЯ ---
      - DJANGO_SECRET_KEY=ychy5uakxhxg1-n5oj2-j4-3oj-c-a8eht-4-3y7l-kjpbqc # Ваш сгенерированный ключ
      - DJANGO_DEBUG=True
      # ------------------------------------
      - DB_NAME=labosfera_db
      - DB_USER=labosfera_user
      - DB_PASSWORD=Olimp_2025!
      - DB_HOST=db
      - DB_PORT=5432
      # --- TELEGRAM НАСТРОЙКИ ---
      - TELEGRAM_BOT_TOKEN=8355662949:AAGUHPivIaYcsJlyve3iEaoRdvuVvJhQQ8w
      - TELEGRAM_CHAT_ID=300596362

  db:
    image: postgres:15-alpine
    container_name: labosfera_db
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=labosfera_db
      - POSTGRES_USER=labosfera_user
      - POSTGRES_PASSWORD=Olimp_2025!
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U labosfera_user -d labosfera_db"]
      interval: 5s
      timeout: 5s
      retries: 5

  nginx:
    image: nginx:1.19.3
    container_name: labosfera_nginx
    ports:
      - "8000:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    depends_on:
      - backend

volumes:
  postgres_data:
  static_volume:
  media_volume: