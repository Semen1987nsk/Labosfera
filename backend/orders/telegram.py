""""""

–ú–æ–¥—É–ª—å –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–πTelegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –¥–ª—è –Ω–æ–≤—ã—Ö –∑–∞–∫–∞–∑–æ–≤ –∏ –æ–±—Ä–∞—â–µ–Ω–∏–π

""""""

import loggingimport requests

import requestsfrom django.conf import settings

from django.conf import settingsimport logging



logger = logging.getLogger(__name__)logger = logging.getLogger(__name__)





def send_telegram_message(message):def send_telegram_message(message: str) -> bool:

    """    """

    –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram

        

    Args:    Args:

        message: –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è        message: –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è

                

    Returns:    Returns:

        bool: True –µ—Å–ª–∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ —É—Å–ø–µ—à–Ω–∞, False –µ—Å–ª–∏ –æ—à–∏–±–∫–∞        True –µ—Å–ª–∏ —É—Å–ø–µ—à–Ω–æ, False –µ—Å–ª–∏ –æ—à–∏–±–∫–∞

    """    """

    try:    try:

        bot_token = getattr(settings, 'TELEGRAM_BOT_TOKEN', None)        bot_token = getattr(settings, 'TELEGRAM_BOT_TOKEN', None)

        chat_id = getattr(settings, 'TELEGRAM_CHAT_ID', None)        chat_id = getattr(settings, 'TELEGRAM_CHAT_ID', None)

                

        if not bot_token or not chat_id:        if not bot_token or not chat_id:

            logger.warning("Telegram –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –Ω–µ –∑–∞–¥–∞–Ω—ã. –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ.")            logger.warning("Telegram –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –Ω–µ –∑–∞–¥–∞–Ω—ã. –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è.")

            return False            return False

                

        url = f"https://api.telegram.org/bot{bot_token}/sendMessage"        url = f"https://api.telegram.org/bot{bot_token}/sendMessage"

                data = {

        payload = {            'chat_id': chat_id,

            'chat_id': chat_id,            'text': message,

            'text': message,            'parse_mode': 'HTML',

            'parse_mode': 'HTML'            'disable_web_page_preview': True

        }        }

                

        response = requests.post(url, data=payload, timeout=10)        response = requests.post(url, data=data, timeout=10)

                response.raise_for_status()

        if response.status_code == 200:        

            logger.info("Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ")        logger.info(f"Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ")

            return True        return True

        else:        

            logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ Telegram: {response.status_code} - {response.text}")    except Exception as e:

            return False        logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: {e}")

                    return False

    except Exception as e:

        logger.error(f"–ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: {e}", exc_info=True)

        return Falsedef notify_new_order(order):

    """

    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–æ–≤–æ–π –∑–∞—è–≤–∫–µ –Ω–∞ –∑–∞–∫–∞–∑

def notify_new_order(order):    

    """    Args:

    –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–æ–≤–æ–π –∑–∞—è–≤–∫–µ –Ω–∞ –∑–∞–∫–∞–∑        order: –û–±—ä–µ–∫—Ç Order

        """

    Args:    items_text = "\n".join([

        order: –û–±—ä–µ–∫—Ç Order        f"  ‚Ä¢ {item.product.name} x{item.quantity}"

    """        for item in order.items.all()

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤    ])

    items_list = []    

    for item in order.items.all():    message = f"""

        price_str = f" ({item.price_at_order:,.0f} ‚ÇΩ)" if item.price_at_order else ""üõí <b>–ù–û–í–ê–Ø –ó–ê–Ø–í–ö–ê #{order.id}</b>

        items_list.append(f"  ‚Ä¢ {item.product.name} x{item.quantity}{price_str}")

    üë§ <b>–ö–ª–∏–µ–Ω—Ç:</b> {order.name}

    items_text = "\n".join(items_list) if items_list else "  –¢–æ–≤–∞—Ä—ã –Ω–µ —É–∫–∞–∑–∞–Ω—ã"üì± <b>–¢–µ–ª–µ—Ñ–æ–Ω:</b> {order.phone}

    ‚úâÔ∏è <b>Email:</b> {order.email}

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å—É–º–º—Éüè¢ <b>–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è:</b> {order.organization or "–ù–µ —É–∫–∞–∑–∞–Ω–∞"}

    total_text = f"{order.estimated_total:,.0f} ‚ÇΩ" if order.estimated_total else "–Ω–µ —É–∫–∞–∑–∞–Ω–∞"

    üì¶ <b>–¢–æ–≤–∞—Ä—ã ({order.total_items} —à—Ç.):</b>

    # –§–æ—Ä–º–∏—Ä—É–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π{items_text}

    comment_text = f"\n\nüí¨ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:\n{order.message}" if order.message else ""

    üí¨ <b>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:</b> {order.message or "–ù–µ—Ç"}

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ

    message = f"""üîó <a href="https://labosfera.ru/admin/orders/order/{order.id}/change/">–û—Ç–∫—Ä—ã—Ç—å –≤ –∞–¥–º–∏–Ω–∫–µ</a>

üõí <b>–ù–û–í–ê–Ø –ó–ê–Ø–í–ö–ê –ù–ê –ó–ê–ö–ê–ó #{order.id}</b>"""

    

üë§ –ö–ª–∏–µ–Ω—Ç: {order.name}    return send_telegram_message(message.strip())

üì± –¢–µ–ª–µ—Ñ–æ–Ω: {order.phone}

‚úâÔ∏è Email: {order.email or '–Ω–µ —É–∫–∞–∑–∞–Ω'}

üè¢ –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è: {order.organization or '–Ω–µ —É–∫–∞–∑–∞–Ω–∞'}def notify_contact_request(contact):

    """

üì¶ –¢–æ–≤–∞—Ä—ã ({order.total_items} —à—Ç.):    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–æ–≤–æ–º –æ–±—Ä–∞—â–µ–Ω–∏–∏

{items_text}    

    Args:

üí∞ –°—É–º–º–∞: {total_text}{comment_text}        contact: –û–±—ä–µ–∫—Ç ContactRequest

    """

üîó <a href="https://labosfera.ru/admin/orders/order/{order.id}/change/">–û—Ç–∫—Ä—ã—Ç—å –≤ –∞–¥–º–∏–Ω–∫–µ</a>    request_type_emoji = {

"""        'callback': 'üìû',

            'consultation': 'üí¨',

    return send_telegram_message(message.strip())        'custom_order': 'üìã',

        'general': '‚ùì'

    }

def notify_contact_request(contact):    

    """    emoji = request_type_emoji.get(contact.request_type, 'üìß')

    –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–æ–≤–æ–º –æ–±—Ä–∞—â–µ–Ω–∏–∏    

        message = f"""

    Args:{emoji} <b>–ù–û–í–û–ï –û–ë–†–ê–©–ï–ù–ò–ï</b>

        contact: –û–±—ä–µ–∫—Ç ContactRequest

    """<b>–¢–∏–ø:</b> {contact.get_request_type_display()}

    # –¢–∏–ø –æ–±—Ä–∞—â–µ–Ω–∏—è

    request_types = {üë§ <b>–ö–ª–∏–µ–Ω—Ç:</b> {contact.name}

        'callback': 'üìû –û–±—Ä–∞—Ç–Ω—ã–π –∑–≤–æ–Ω–æ–∫',üì± <b>–¢–µ–ª–µ—Ñ–æ–Ω:</b> {contact.phone}

        'consultation': 'üíº –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è',‚úâÔ∏è <b>Email:</b> {contact.email or "–ù–µ —É–∫–∞–∑–∞–Ω"}

        'custom_order': 'üéØ –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –∑–∞–∫–∞–∑',üè¢ <b>–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è:</b> {contact.organization or "–ù–µ —É–∫–∞–∑–∞–Ω–∞"}

        'general': 'üí¨ –û–±—â–∏–π –≤–æ–ø—Ä–æ—Å'

    }üí¨ <b>–°–æ–æ–±—â–µ–Ω–∏–µ:</b>

    request_type_text = request_types.get(contact.request_type, contact.get_request_type_display()){contact.message or "–ù–µ—Ç"}

    

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µüîó <a href="https://labosfera.ru/admin/orders/contactrequest/{contact.id}/change/">–û—Ç–∫—Ä—ã—Ç—å –≤ –∞–¥–º–∏–Ω–∫–µ</a>

    message_text = f"\n\nüí¨ –°–æ–æ–±—â–µ–Ω–∏–µ:\n{contact.message}" if contact.message else """""

        

    message = f"""    return send_telegram_message(message.strip())

üìû <b>–ù–û–í–û–ï –û–ë–†–ê–©–ï–ù–ò–ï</b>

–¢–∏–ø: {request_type_text}

üë§ –ö–ª–∏–µ–Ω—Ç: {contact.name}
üì± –¢–µ–ª–µ—Ñ–æ–Ω: {contact.phone}
‚úâÔ∏è Email: {contact.email or '–Ω–µ —É–∫–∞–∑–∞–Ω'}
üè¢ –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è: {contact.organization or '–Ω–µ —É–∫–∞–∑–∞–Ω–∞'}{message_text}

üîó <a href="https://labosfera.ru/admin/orders/contactrequest/{contact.id}/change/">–û—Ç–∫—Ä—ã—Ç—å –≤ –∞–¥–º–∏–Ω–∫–µ</a>
"""
    
    return send_telegram_message(message.strip())
