from django.contrib import admin
from django.utils.html import format_html
from .models import Category, Product, ProductImage

# –°–æ–∑–¥–∞–µ–º "–≤—Å—Ç—Ä–æ–π–∫—É" –¥–ª—è —É–¥–æ–±–Ω–æ–≥–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∫ —Ç–æ–≤–∞—Ä—É
class ProductImageInline(admin.TabularInline):
    model = ProductImage
    extra = 1
    fields = ('image_preview', 'image', 'is_main', 'alt_text')
    readonly_fields = ('image_preview',)
    
    def image_preview(self, obj):
        """–ü—Ä–µ–≤—å—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ –∞–¥–º–∏–Ω–∫–µ"""
        if obj.image:
            return format_html(
                '<img src="{}" style="max-width: 100px; max-height: 100px; border-radius: 5px;"/>',
                obj.image.url
            )
        return "–ù–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è"
    image_preview.short_description = "–ü—Ä–µ–≤—å—é"


@admin.register(Category)
class CategoryAdmin(admin.ModelAdmin):
    list_display = ('name', 'slug', 'image_preview')
    prepopulated_fields = {'slug': ('name',)}
    
    def image_preview(self, obj):
        """–ü—Ä–µ–≤—å—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏"""
        if obj.image:
            return format_html(
                '<img src="{}" style="max-width: 50px; max-height: 50px; border-radius: 5px;"/>',
                obj.image.url
            )
        return "–ù–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è"
    image_preview.short_description = "–§–æ—Ç–æ"


@admin.register(Product)
class ProductAdmin(admin.ModelAdmin):
    list_display = ('name', 'category', 'price', 'sort_order', 'is_featured', 'main_image_preview', 'images_count')
    list_filter = ('category', 'is_featured')
    search_fields = ('name', 'description')
    prepopulated_fields = {'slug': ('name',)}
    inlines = [ProductImageInline]
    list_editable = ('sort_order', 'is_featured')  # –ü–æ–∑–≤–æ–ª—è–µ—Ç —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø—Ä—è–º–æ –≤ —Å–ø–∏—Å–∫–µ
    ordering = ('-is_featured', 'sort_order', 'name')  # –ü–æ—Ä—è–¥–æ–∫ –≤ –∞–¥–º–∏–Ω–∫–µ
    
    def main_image_preview(self, obj):
        """–ü—Ä–µ–≤—å—é –≥–ª–∞–≤–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è"""
        main_image = obj.images.filter(is_main=True).first()
        if main_image and main_image.image:
            return format_html(
                '<img src="{}" style="max-width: 50px; max-height: 50px; border-radius: 5px;"/>',
                main_image.image.url
            )
        return "–ù–µ—Ç —Ñ–æ—Ç–æ"
    main_image_preview.short_description = "–ì–ª–∞–≤–Ω–æ–µ —Ñ–æ—Ç–æ"
    
    def images_count(self, obj):
        """–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π"""
        count = obj.images.count()
        if count > 0:
            return format_html('<span style="color: green;">üì∑ {}</span>', count)
        return format_html('<span style="color: red;">‚ùå 0</span>')
    images_count.short_description = "–§–æ—Ç–æ"


@admin.register(ProductImage)
class ProductImageAdmin(admin.ModelAdmin):
    list_display = ('product', 'image_preview', 'is_main', 'alt_text')
    list_filter = ('is_main', 'product__category')
    search_fields = ('product__name', 'alt_text')
    
    def image_preview(self, obj):
        if obj.image:
            return format_html(
                '<img src="{}" style="max-width: 80px; max-height: 80px; border-radius: 5px;"/>',
                obj.image.url
            )
        return "–ù–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è"
    image_preview.short_description = "–ü—Ä–µ–≤—å—é"